module digit_reg (
    reset,
    clk,
    in,
    out,
    scan_in0,
    scan_en,
    scan_out0
    ) ;
 
input
    reset,                // system reset
    clk ;                 // write strobe

input [19:0]
    in ;                  // data input

output [19:0]
    out ;                 // data output

input
    scan_in0,             // test scan mode data input
    scan_en;              // test scan mode enable

output
    scan_out0;            // test scan mode data output

wire [19:0]
    out ;
reg [19:0] R0;
reg [19:0] R1;
reg [19:0] R2;
reg [19:0] R3;
reg [19:0] R4;
reg [19:0] R5;
reg [19:0] R6;
reg [19:0] R7;
reg [19:0] R8;
reg [19:0] R9;
reg [19:0] R10;
reg [19:0] R11;
reg [19:0] R12;
reg [19:0] R13;
reg [19:0] R14;
reg [19:0] R15;
reg [19:0] R16;
reg [19:0] R17;
reg [19:0] R18;
reg [19:0] R19;
always @(posedge clk or posedge reset)
    if (reset)
        begin
          R0 <= 10;
          R1 <= 10;
          R2 <= 10;
          R3 <= 10;
          R4 <= 10;
          R5 <= 10;
          R6 <= 10;
          R7 <= 10;
          R8 <= 10;
          R9 <= 10;
          R10 <= 10;
          R11 <= 10;
          R12 <= 10;
          R13 <= 10;
          R14 <= 10;
          R15 <= 10;
          R16 <= 10;
          R17 <= 10;
          R18 <= 10;
          R19 <= 10;
        end
    else
        begin
          R0 <= in;
          R1 <= R0;
          R2 <= R1;
          R3 <= R2;
          R4 <= R3;
          R5 <= R4;
          R6 <= R5;
          R7 <= R6;
          R8 <= R7;
          R9 <= R8;
          R10 <= R9;
          R11 <= R10;
          R12 <= R11;
          R13 <= R12;
          R14 <= R13;
          R15 <= R14;
          R16 <= R15;
          R17 <= R16;
          R18 <= R17;
          R19 <= R18;
          out = R19;
        end
        
endmodule 
